/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.shopping.app.admin.orders;

import com.mycompany.shopping.app.admin.dashboard.AdminDashboard;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author THUSH
 */
public class ManageOrders extends javax.swing.JFrame {

    /**
     * Creates new form ManageOrders
     */
    
    public ManageOrders() {
        initComponents();
        SelectOrders();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        header = new javax.swing.JPanel();
        MainTitle = new javax.swing.JLabel();
        SubTitle = new javax.swing.JLabel();
        body = new javax.swing.JPanel();
        ProductListScrollPane1 = new javax.swing.JScrollPane();
        ProductListScrollPane2 = new javax.swing.JScrollPane();
        ProductListTable = new javax.swing.JTable();
        OrdersScrollPane1 = new javax.swing.JScrollPane();
        OrdersScrollPane2 = new javax.swing.JScrollPane();
        OrdersTable = new javax.swing.JTable();
        ProductList = new javax.swing.JLabel();
        StateComboBox = new javax.swing.JComboBox<>();
        Orders = new javax.swing.JLabel();
        FirstNameTextField = new javax.swing.JTextField();
        FirstName = new javax.swing.JLabel();
        LastName = new javax.swing.JLabel();
        LastNameTextField = new javax.swing.JTextField();
        PhoneNoTextField = new javax.swing.JTextField();
        PhoneNo = new javax.swing.JLabel();
        EmailTextField = new javax.swing.JTextField();
        Email = new javax.swing.JLabel();
        AddressLine1TextField = new javax.swing.JTextField();
        AddressLine1 = new javax.swing.JLabel();
        AddressLine2TextField = new javax.swing.JTextField();
        AddressLine2 = new javax.swing.JLabel();
        StateOrDivisionTextField = new javax.swing.JTextField();
        StateOrDivision = new javax.swing.JLabel();
        CountryTextField = new javax.swing.JTextField();
        Country = new javax.swing.JLabel();
        PostelCodeTextField = new javax.swing.JTextField();
        PostelCode = new javax.swing.JLabel();
        StateComboBox1 = new javax.swing.JComboBox<>();
        LastName1 = new javax.swing.JLabel();
        SetStateBtn = new javax.swing.JButton();
        DeleteOrderBtn = new javax.swing.JButton();
        HomeBtn = new javax.swing.JButton();
        SearchBtn = new javax.swing.JButton();
        footer = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        header.setBackground(new java.awt.Color(255, 204, 51));

        MainTitle.setFont(new java.awt.Font("Bodoni MT Black", 1, 18)); // NOI18N
        MainTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MainTitle.setText("Manage orders");

        SubTitle.setFont(new java.awt.Font("Bodoni MT Black", 3, 24)); // NOI18N
        SubTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SubTitle.setText("King's Men Textitle Shop");
        SubTitle.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout headerLayout = new javax.swing.GroupLayout(header);
        header.setLayout(headerLayout);
        headerLayout.setHorizontalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, headerLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SubTitle, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, headerLayout.createSequentialGroup()
                        .addComponent(MainTitle)
                        .addGap(109, 109, 109)))
                .addGap(334, 334, 334))
        );
        headerLayout.setVerticalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, headerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(SubTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MainTitle)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ProductListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item ID", "Main catagory", "Sub category", "Small Quantity", "Small Price", "Medium Quantity", "Medium Price", "Large Quantity", "Large Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        ProductListTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ProductListTableMouseClicked(evt);
            }
        });
        ProductListScrollPane2.setViewportView(ProductListTable);

        ProductListScrollPane1.setViewportView(ProductListScrollPane2);

        OrdersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order ID", "Customer ID", "Date and Time", "State"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        OrdersTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                OrdersTableMouseClicked(evt);
            }
        });
        OrdersScrollPane2.setViewportView(OrdersTable);

        OrdersScrollPane1.setViewportView(OrdersScrollPane2);

        ProductList.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        ProductList.setText("Product List");

        StateComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "State", "Pending", "Received" }));
        StateComboBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                StateComboBoxMouseClicked(evt);
            }
        });

        Orders.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Orders.setText("Orders");

        FirstName.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        FirstName.setText("First Name");

        LastName.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        LastName.setText("Last Name");

        PhoneNoTextField.setText("\n");

        PhoneNo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        PhoneNo.setText("Telephone");

        Email.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        Email.setText("Email");

        AddressLine1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        AddressLine1.setText("Address line 1");

        AddressLine2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        AddressLine2.setText("Address line 2");

        StateOrDivision.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        StateOrDivision.setText("State/Division");

        Country.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        Country.setText("Country");

        PostelCode.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        PostelCode.setText("Postel Code");

        StateComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select State", "All", "Pending", "Received" }));
        StateComboBox1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                StateComboBox1MouseClicked(evt);
            }
        });

        LastName1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        LastName1.setText("State");

        SetStateBtn.setBackground(new java.awt.Color(255, 204, 51));
        SetStateBtn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        SetStateBtn.setForeground(new java.awt.Color(102, 102, 102));
        SetStateBtn.setText("Set State");
        SetStateBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SetStateBtnMouseClicked(evt);
            }
        });
        SetStateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SetStateBtnActionPerformed(evt);
            }
        });

        DeleteOrderBtn.setBackground(new java.awt.Color(255, 204, 51));
        DeleteOrderBtn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        DeleteOrderBtn.setForeground(new java.awt.Color(102, 102, 102));
        DeleteOrderBtn.setText("Delete Order");
        DeleteOrderBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DeleteOrderBtnMouseClicked(evt);
            }
        });
        DeleteOrderBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteOrderBtnActionPerformed(evt);
            }
        });

        HomeBtn.setBackground(new java.awt.Color(255, 204, 51));
        HomeBtn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        HomeBtn.setForeground(new java.awt.Color(102, 102, 102));
        HomeBtn.setText("Home");
        HomeBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                HomeBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                HomeBtnMouseEntered(evt);
            }
        });
        HomeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HomeBtnActionPerformed(evt);
            }
        });

        SearchBtn.setBackground(new java.awt.Color(255, 204, 51));
        SearchBtn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        SearchBtn.setForeground(new java.awt.Color(102, 102, 102));
        SearchBtn.setText("Search");
        SearchBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SearchBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                SearchBtnMouseEntered(evt);
            }
        });
        SearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout bodyLayout = new javax.swing.GroupLayout(body);
        body.setLayout(bodyLayout);
        bodyLayout.setHorizontalGroup(
            bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bodyLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bodyLayout.createSequentialGroup()
                        .addGroup(bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(OrdersScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(bodyLayout.createSequentialGroup()
                                .addComponent(Orders, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(StateComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(SearchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                        .addGroup(bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(bodyLayout.createSequentialGroup()
                                .addGap(235, 235, 235)
                                .addComponent(ProductList, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(ProductListScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 588, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(58, 58, 58))
                    .addGroup(bodyLayout.createSequentialGroup()
                        .addGroup(bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(PostelCode, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Country, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(FirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PhoneNo, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AddressLine1, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE)
                            .addComponent(AddressLine2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(StateOrDivision))
                        .addGap(18, 18, 18)
                        .addGroup(bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(bodyLayout.createSequentialGroup()
                                .addGroup(bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(FirstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(PhoneNoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(44, 44, 44)
                                .addGroup(bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(bodyLayout.createSequentialGroup()
                                        .addComponent(LastName, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(LastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(bodyLayout.createSequentialGroup()
                                        .addComponent(Email, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(EmailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(AddressLine2TextField)
                                .addComponent(AddressLine1TextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(PostelCodeTextField)
                                .addComponent(CountryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(StateOrDivisionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bodyLayout.createSequentialGroup()
                                .addComponent(LastName1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(StateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(SetStateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(62, 62, 62))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bodyLayout.createSequentialGroup()
                                .addComponent(DeleteOrderBtn)
                                .addGap(18, 18, 18)
                                .addComponent(HomeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(157, 157, 157))))))
        );
        bodyLayout.setVerticalGroup(
            bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bodyLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bodyLayout.createSequentialGroup()
                        .addComponent(ProductList, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3))
                    .addGroup(bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(bodyLayout.createSequentialGroup()
                            .addGroup(bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(Orders, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(StateComboBox1))
                            .addGap(3, 3, 3))
                        .addGroup(bodyLayout.createSequentialGroup()
                            .addComponent(SearchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGroup(bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(OrdersScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ProductListScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(LastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LastName)
                    .addComponent(FirstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FirstName)
                    .addComponent(StateComboBox)
                    .addComponent(LastName1)
                    .addComponent(SetStateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bodyLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(EmailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Email)
                            .addComponent(PhoneNoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PhoneNo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(AddressLine1TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AddressLine1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(AddressLine2TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AddressLine2)))
                    .addGroup(bodyLayout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addGroup(bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(DeleteOrderBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HomeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(8, 8, 8)
                .addGroup(bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(StateOrDivisionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(StateOrDivision))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(CountryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Country))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(PostelCodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PostelCode))
                .addContainerGap())
        );

        footer.setBackground(new java.awt.Color(255, 204, 51));

        javax.swing.GroupLayout footerLayout = new javax.swing.GroupLayout(footer);
        footer.setLayout(footerLayout);
        footerLayout.setHorizontalGroup(
            footerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        footerLayout.setVerticalGroup(
            footerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 8, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(header, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(footer, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(body, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(header, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(body, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(footer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void StateComboBoxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StateComboBoxMouseClicked
 
    }//GEN-LAST:event_StateComboBoxMouseClicked
    
    private void ProductListTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProductListTableMouseClicked

    }//GEN-LAST:event_ProductListTableMouseClicked
    
    int customerID;
    private void OrdersTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OrdersTableMouseClicked
        DefaultTableModel model = (DefaultTableModel)OrdersTable.getModel();
        int Myindex = OrdersTable.getSelectedRow();
        
        customerID = Integer.parseInt(model.getValueAt(Myindex, 1).toString());
        
        int c;
        try{
            Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/textile_shop","root","#19KKas99@%");
            add = Con.prepareStatement("SELECT item_id, main_cat, cat_name, s_qty, price_s, m_qty, price_m, l_qty, price_l FROM textile_shop.order WHERE order_customer_id ="+customerID);
            Rs = add.executeQuery();
            
            ResultSetMetaData Rsd = Rs.getMetaData();
            c = Rsd.getColumnCount();
            
            DefaultTableModel d = (DefaultTableModel)ProductListTable.getModel();
            d.setRowCount(0);
            
            while(Rs.next()){
                Vector v = new Vector();
                
                for(int i=1; i<=c; i++){
                    v.add(Rs.getInt("item_id"));
                    v.add(Rs.getString("main_cat"));
                    v.add(Rs.getString("cat_name"));
                    v.add(Rs.getInt("s_qty"));
                    v.add(Rs.getInt("price_s"));
                    v.add(Rs.getInt("m_qty"));
                    v.add(Rs.getInt("price_m"));
                    v.add(Rs.getInt("l_qty"));
                    v.add(Rs.getInt("price_l"));                   
                }
                d.addRow(v);
            }
            
            setTextFields(customerID);
            Con.close();
        }catch(SQLException e){
            e.printStackTrace();
        }
        
        
        
    }//GEN-LAST:event_OrdersTableMouseClicked

    private void StateComboBox1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StateComboBox1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_StateComboBox1MouseClicked

    int OrderID;
    String OrderState;
    private void SetStateBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SetStateBtnMouseClicked
        DefaultTableModel model = (DefaultTableModel)OrdersTable.getModel();
        int Myindex = OrdersTable.getSelectedRow();
        
        OrderID = Integer.parseInt(model.getValueAt(Myindex, 0).toString());
        OrderState = model.getValueAt(Myindex, 3).toString();
        
        if(!(StateComboBox.getSelectedItem().equals(OrderState))){    
            try{
                Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/textile_shop","root","#19KKas99@%");
                add = Con.prepareStatement("UPDATE textile_shop.order SET state=? WHERE id="+OrderID);
                add.setString(1,StateComboBox.getSelectedItem().toString());

                row = add.executeUpdate();
                JOptionPane.showMessageDialog(this,"State Successfully Updated");
                Con.close();
                SelectOrders();
            }catch(SQLException e){
                e.printStackTrace();
            }
        }else{
            JOptionPane.showMessageDialog(this,"Same State");
        }


    }//GEN-LAST:event_SetStateBtnMouseClicked

    private void SetStateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SetStateBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SetStateBtnActionPerformed

    int dialogResult, row;
    private void DeleteOrderBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DeleteOrderBtnMouseClicked
        DefaultTableModel model = (DefaultTableModel)OrdersTable.getModel();
        int Myindex = OrdersTable.getSelectedRow();
        
        OrderID = Integer.parseInt(model.getValueAt(Myindex, 0).toString());
        dialogResult = JOptionPane.showConfirmDialog(null, "Do you want to delete the Order?", "Warning",JOptionPane.YES_NO_OPTION);
        
        if(dialogResult == JOptionPane.YES_OPTION){
            try{
                Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/textile_shop","root","#19KKas99@%");
                add = Con.prepareStatement("DELETE FROM textile_shop.order WHERE id =?"); 
                add.setInt(1, OrderID);
                
                FirstNameTextField.setText("");
                LastNameTextField.setText("");
                PhoneNoTextField.setText("");
                EmailTextField.setText("");
                AddressLine1TextField.setText("");
                AddressLine2TextField.setText("");
                StateOrDivisionTextField.setText("");
                CountryTextField.setText("");
                PostelCodeTextField.setText("");
                StateComboBox.setSelectedItem("State");
                
                row = add.executeUpdate();
                JOptionPane.showMessageDialog(this,"Order Successfully Deleted");
                Con.close();
                SelectOrders();
            }catch(SQLException e){
                e.printStackTrace();
            }
        }
        
    }//GEN-LAST:event_DeleteOrderBtnMouseClicked

    private void DeleteOrderBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteOrderBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DeleteOrderBtnActionPerformed

    private void HomeBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HomeBtnMouseClicked
        new AdminDashboard().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_HomeBtnMouseClicked

    private void HomeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HomeBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HomeBtnActionPerformed

    private void HomeBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HomeBtnMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_HomeBtnMouseEntered

    private void SearchBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SearchBtnMouseClicked
        
        if(StateComboBox1.getSelectedItem().equals("Pending") || StateComboBox1.getSelectedItem().equals("Received")){
            int c;
            String s = StateComboBox1.getSelectedItem().toString();
            try{
                Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/textile_shop","root","#19KKas99@%");
                add = Con.prepareStatement("SELECT id, order_customer_id, createdAt, state FROM textile_shop.order WHERE state=?");
                add.setString(1, s);
                Rs = add.executeQuery();

                ResultSetMetaData Rsd = Rs.getMetaData();
                c = Rsd.getColumnCount();

                DefaultTableModel d = (DefaultTableModel)OrdersTable.getModel();
                d.setRowCount(0);

                while(Rs.next()){
                    Vector v = new Vector();

                    for(int i=1; i<=c; i++){
                        v.add(Rs.getInt("id"));
                        v.add(Rs.getInt("order_customer_id"));
                        v.add(Rs.getString("createdAt"));
                        v.add(Rs.getString("state"));

                    }
                    d.addRow(v);
                }

                Con.close();
            }catch(SQLException e){
                e.printStackTrace();
            }
        } else {
            SelectOrders();
        }
    }//GEN-LAST:event_SearchBtnMouseClicked

    private void SearchBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SearchBtnMouseEntered
        
    }//GEN-LAST:event_SearchBtnMouseEntered

    private void SearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SearchBtnActionPerformed

    public void setTextFields(int customerID){
        try{
            Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/textile_shop","root","#19KKas99@%");
            add = Con.prepareStatement("SELECT first_name, last_name, phone_number, email, address_line_1, address_line_2, state, country, postel_code FROM textile_shop.order_customer WHERE signup_id ="+customerID);
            Rs = add.executeQuery();
            
            if(Rs.next()){
                FirstNameTextField.setText(Rs.getString("first_name"));
                LastNameTextField.setText(Rs.getString("last_name"));
                PhoneNoTextField.setText(Rs.getString("phone_number"));
                EmailTextField.setText(Rs.getString("email"));
                AddressLine1TextField.setText(Rs.getString("address_line_1"));
                AddressLine2TextField.setText(Rs.getString("address_line_2"));
                StateOrDivisionTextField.setText(Rs.getString("state"));
                CountryTextField.setText(Rs.getString("country"));
                PostelCodeTextField.setText(Rs.getString("postel_code"));
            }
            Con.close();
            
            DefaultTableModel model = (DefaultTableModel)OrdersTable.getModel();
            int Myindex = OrdersTable.getSelectedRow();
            StateComboBox.setSelectedItem(model.getValueAt(Myindex, 3).toString());
                   
        }catch(SQLException e){
            e.printStackTrace();
        }
        
    }
    
    /**
     * @param args the command line arguments
     */
    
    Connection Con = null;
    Statement St = null;
    ResultSet Rs = null;
    PreparedStatement add = null;
    
    public void SelectOrders(){
        int c;
        try{
            Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/textile_shop","root","#19KKas99@%");
            add = Con.prepareStatement("SELECT id, order_customer_id, createdAt, state FROM textile_shop.order;");
            Rs = add.executeQuery();
            
            ResultSetMetaData Rsd = Rs.getMetaData();
            c = Rsd.getColumnCount();
            
            DefaultTableModel d = (DefaultTableModel)OrdersTable.getModel();
            d.setRowCount(0);
            
            while(Rs.next()){
                Vector v = new Vector();
                
                for(int i=1; i<=c; i++){
                    v.add(Rs.getInt("id"));
                    v.add(Rs.getInt("order_customer_id"));
                    v.add(Rs.getString("createdAt"));
                    v.add(Rs.getString("state"));
                    
                }
                d.addRow(v);
            }
            
            Con.close();
        }catch(SQLException e){
            e.printStackTrace();
        }
    }
        
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageOrders().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AddressLine1;
    private javax.swing.JTextField AddressLine1TextField;
    private javax.swing.JLabel AddressLine2;
    private javax.swing.JTextField AddressLine2TextField;
    private javax.swing.JLabel Country;
    private javax.swing.JTextField CountryTextField;
    private javax.swing.JButton DeleteOrderBtn;
    private javax.swing.JLabel Email;
    private javax.swing.JTextField EmailTextField;
    private javax.swing.JLabel FirstName;
    private javax.swing.JTextField FirstNameTextField;
    private javax.swing.JButton HomeBtn;
    private javax.swing.JLabel LastName;
    private javax.swing.JLabel LastName1;
    private javax.swing.JTextField LastNameTextField;
    private javax.swing.JLabel MainTitle;
    private javax.swing.JLabel Orders;
    private javax.swing.JScrollPane OrdersScrollPane1;
    private javax.swing.JScrollPane OrdersScrollPane2;
    private javax.swing.JTable OrdersTable;
    private javax.swing.JLabel PhoneNo;
    private javax.swing.JTextField PhoneNoTextField;
    private javax.swing.JLabel PostelCode;
    private javax.swing.JTextField PostelCodeTextField;
    private javax.swing.JLabel ProductList;
    private javax.swing.JScrollPane ProductListScrollPane1;
    private javax.swing.JScrollPane ProductListScrollPane2;
    private javax.swing.JTable ProductListTable;
    private javax.swing.JButton SearchBtn;
    private javax.swing.JButton SetStateBtn;
    private javax.swing.JComboBox<String> StateComboBox;
    private javax.swing.JComboBox<String> StateComboBox1;
    private javax.swing.JLabel StateOrDivision;
    private javax.swing.JTextField StateOrDivisionTextField;
    private javax.swing.JLabel SubTitle;
    private javax.swing.JPanel body;
    private javax.swing.JPanel footer;
    private javax.swing.JPanel header;
    // End of variables declaration//GEN-END:variables
}
