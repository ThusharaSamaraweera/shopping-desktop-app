/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.shopping.app.admin.manageCategory;

import com.mycompany.shopping.app.admin.dashboard.AdminDashboard;
import com.mycompany.shopping.app.admin.dashboard.SuperAdminDashboard;
import com.mycompany.shopping.app.dbConnection.SqlConnection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author THUSH
 */
public class ManageCategory extends javax.swing.JFrame {

    /**
     * Creates new form ManageCategory
     */
    String user_type = null;
    public ManageCategory(String user) {
        initComponents();
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        loadData();
        user_type = user;
    }
    
    Statement st = null;
    ResultSet re = null;
    PreparedStatement pst = null;
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        categoryNameLabel = new javax.swing.JLabel();
        collectionDropdown = new javax.swing.JComboBox<>();
        collectionNameLabel = new javax.swing.JLabel();
        CategoryNameTextField = new javax.swing.JTextField();
        AddBtn = new javax.swing.JButton();
        ScrollPane = new javax.swing.JScrollPane();
        categoryTable = new javax.swing.JTable();
        updateBtn = new javax.swing.JButton();
        removeBtn = new javax.swing.JButton();
        MainTitle = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        Back = new javax.swing.JButton();
        header = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(1400, 750));
        setMinimumSize(new java.awt.Dimension(1400, 750));
        setPreferredSize(new java.awt.Dimension(1400, 750));
        setResizable(false);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setMaximumSize(new java.awt.Dimension(1000, 750));
        jPanel1.setMinimumSize(new java.awt.Dimension(1000, 750));
        jPanel1.setPreferredSize(new java.awt.Dimension(1000, 750));
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel1MouseClicked(evt);
            }
        });

        categoryNameLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        categoryNameLabel.setText("Category Name");

        collectionDropdown.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        collectionDropdown.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Men", "Women", "Kids" }));

        collectionNameLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        collectionNameLabel.setText("Collection Name");

        CategoryNameTextField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        AddBtn.setBackground(new java.awt.Color(255, 204, 0));
        AddBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        AddBtn.setText("ADD");
        AddBtn.setBorder(null);
        AddBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AddBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AddBtnMouseClicked(evt);
            }
        });

        ScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        ScrollPane.setFocusable(false);

        categoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Collection", "Category ", "No of items"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        categoryTable.getTableHeader().setReorderingAllowed(false);
        categoryTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                categoryTableMouseClicked(evt);
            }
        });
        ScrollPane.setViewportView(categoryTable);
        if (categoryTable.getColumnModel().getColumnCount() > 0) {
            categoryTable.getColumnModel().getColumn(2).setMinWidth(250);
        }

        updateBtn.setBackground(new java.awt.Color(255, 204, 0));
        updateBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        updateBtn.setText("Update");
        updateBtn.setBorder(null);
        updateBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        updateBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updateBtnMouseClicked(evt);
            }
        });

        removeBtn.setBackground(new java.awt.Color(255, 204, 0));
        removeBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        removeBtn.setText("REMOVE");
        removeBtn.setBorder(null);
        removeBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        removeBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                removeBtnMouseClicked(evt);
            }
        });

        MainTitle.setFont(new java.awt.Font("Bodoni MT Black", 1, 18)); // NOI18N
        MainTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MainTitle.setText("Manage categories");

        jPanel3.setBackground(new java.awt.Color(255, 204, 51));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 86, Short.MAX_VALUE)
        );

        Back.setBackground(new java.awt.Color(255, 204, 51));
        Back.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        Back.setText("Back");
        Back.setBorder(null);
        Back.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Back.setFocusable(false);
        Back.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BackMouseClicked(evt);
            }
        });
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });

        header.setBackground(new java.awt.Color(255, 204, 51));
        header.setMaximumSize(new java.awt.Dimension(1000, 750));

        jPanel2.setBackground(new java.awt.Color(255, 204, 0));
        jPanel2.setMaximumSize(new java.awt.Dimension(1000, 32767));
        jPanel2.setOpaque(false);
        jPanel2.setPreferredSize(new java.awt.Dimension(1000, 143));

        jLabel3.setIcon(new javax.swing.ImageIcon("D:\\edu\\Edu IT\\edu projects\\project6\\Shopping-app\\shopping-desktop-app\\asserts\\images\\Textile-shop-header4.jpg")); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(50, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 947, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout headerLayout = new javax.swing.GroupLayout(header);
        header.setLayout(headerLayout);
        headerLayout.setHorizontalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerLayout.createSequentialGroup()
                .addGap(136, 136, 136)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 1069, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(197, Short.MAX_VALUE))
        );
        headerLayout.setVerticalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(AddBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41)
                                .addComponent(removeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35)
                                .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(categoryNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(collectionNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(61, 61, 61)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(CategoryNameTextField)
                                    .addComponent(collectionDropdown, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(200, 200, 200)
                        .addComponent(Back, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ScrollPane)
                .addGap(109, 109, 109))
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(header, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(MainTitle)
                .addGap(585, 585, 585))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(header, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(MainTitle)
                .addGap(55, 55, 55)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(collectionDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(collectionNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(categoryNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CategoryNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(75, 75, 75)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AddBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(removeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 99, Short.MAX_VALUE)
                        .addComponent(Back, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(70, 70, 70)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1402, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AddBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddBtnMouseClicked
        Object collectionObj = collectionDropdown.getSelectedItem();
        String category = CategoryNameTextField.getText();
        
        // validation
        if(collectionObj == null){
            JOptionPane.showMessageDialog(null, "Select collection");   
            return;
        }
        if(category.isBlank()){
            JOptionPane.showMessageDialog(null, "Enter category");   
            return;            
        }
        
        String collection = collectionDropdown.getSelectedItem().toString();
        

        try {
            SqlConnection sqlConnection = new SqlConnection();
            pst =  sqlConnection.con.prepareStatement("INSERT INTO category(main_cat, name) VALUES (?,?)");
            pst.setString(1, collection);
            pst.setString(2, category);
            
            pst.executeUpdate();
            JOptionPane.showMessageDialog(null, "Category added successfully");
            loadData();

            collectionDropdown.setSelectedIndex(-1);
            CategoryNameTextField.setText("");
            collectionDropdown.requestFocus();            
        } catch(SQLException e){
            System.out.println(e);
        }
           
    }//GEN-LAST:event_AddBtnMouseClicked

    private void updateBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateBtnMouseClicked
        DefaultTableModel defaultTableModel = (DefaultTableModel)categoryTable.getModel();
        int selectIndex = categoryTable.getSelectedRow();
        
        // validation
        if(selectIndex == -1){
            JOptionPane.showMessageDialog(null, "Select category in table");   
            return;
        }
            
        int id = Integer.parseInt(defaultTableModel.getValueAt(selectIndex, 0).toString());
        String collection = collectionDropdown.getSelectedItem().toString();
        String category = CategoryNameTextField.getText();
                
        try{
            SqlConnection sqlConnection = new SqlConnection();
            pst = sqlConnection.con.prepareStatement("UPDATE category set main_cat=?, name=? WHERE category_id=?");
            pst.setString(1, collection);
            pst.setString(2, category);
            pst.setInt(3, id);
            
//            JOptionPane.showMessageDialog(null, "Category updated successfully");
            
            int result = JOptionPane.showConfirmDialog(null,"Want to update?", "Warning",
               JOptionPane.YES_NO_OPTION,
               JOptionPane.QUESTION_MESSAGE);
            if(result == JOptionPane.YES_OPTION){
              JOptionPane.showMessageDialog(null, "Category updated successfully");
              pst.executeUpdate();
              loadData();
            }else if(result == JOptionPane.NO_OPTION){
              JOptionPane.showMessageDialog(null, "Update is canceled");
            }
            

            collectionDropdown.setSelectedIndex(-1);
            CategoryNameTextField.setText("");
            collectionDropdown.requestFocus(); 
            
        } catch(SQLException e){
            System.out.println(e);
        }
    }//GEN-LAST:event_updateBtnMouseClicked

    private void categoryTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_categoryTableMouseClicked
        DefaultTableModel defaultTableModel = (DefaultTableModel)categoryTable.getModel();
        int setectIndex = categoryTable.getSelectedRow();

        collectionDropdown.setSelectedItem(defaultTableModel.getValueAt(setectIndex, 1).toString());        
        CategoryNameTextField.setText(defaultTableModel.getValueAt(setectIndex, 2).toString());

    }//GEN-LAST:event_categoryTableMouseClicked

    private void removeBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeBtnMouseClicked
        DefaultTableModel defaultTableModel = (DefaultTableModel)categoryTable.getModel();
        int selectIndex = categoryTable.getSelectedRow();
        
        // validation
        if(selectIndex == -1){
            JOptionPane.showMessageDialog(null, "Select category in table");   
            return;
        }
            
        int id = Integer.parseInt(defaultTableModel.getValueAt(selectIndex, 0).toString());      
        
        int result = JOptionPane.showConfirmDialog(null,"Want to delete?", "Warning",
           JOptionPane.YES_NO_OPTION,
           JOptionPane.QUESTION_MESSAGE);
        
        if(result == JOptionPane.YES_OPTION){
          try {
            SqlConnection sqlConnection = new SqlConnection();
            pst = sqlConnection.con.prepareStatement("DELETE from category WHERE category_id=?");
            pst.setInt(1, id);              
              
            JOptionPane.showMessageDialog(null, "Category removed successfully");
            pst.executeUpdate();
            loadData();   
            
            collectionDropdown.setSelectedIndex(-1);
            CategoryNameTextField.setText("");
            collectionDropdown.requestFocus(); 
          } catch(SQLException e){
              System.out.println(e);
          }
        }
        
    }//GEN-LAST:event_removeBtnMouseClicked

    private void BackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BackMouseClicked
        if(user_type.equals("SA")){
            new SuperAdminDashboard(user_type).setVisible(true);        
        } else {
            new AdminDashboard(user_type).setVisible(true);
        }
        this.dispose();
    }//GEN-LAST:event_BackMouseClicked

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BackActionPerformed

    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked
        collectionDropdown.setSelectedIndex(-1);
        CategoryNameTextField.setText("");
        collectionDropdown.requestFocus(); 
    }//GEN-LAST:event_jPanel1MouseClicked

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        collectionDropdown.setSelectedIndex(-1);
        CategoryNameTextField.setText("");
        collectionDropdown.requestFocus();  
    }//GEN-LAST:event_formMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageCategory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageCategory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageCategory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageCategory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageCategory("").setVisible(true);
            }
        });
    }
    
    public void loadData(){
        int noOfColumns = 4;
        collectionDropdown.setSelectedIndex(-1);
        try{
            SqlConnection sqlConnection = new SqlConnection();       
            st = sqlConnection.con.createStatement();
            String qu = "SELECT * FROM category";
            re = st.executeQuery(qu);          
                   
            DefaultTableModel defaultTableModel = (DefaultTableModel)categoryTable.getModel();
            defaultTableModel.setRowCount(0);            
            
            while(re.next()){
                Vector vector = new Vector();
                for(int i=1; i<=noOfColumns; i++){
                    vector.add(re.getString(1));                
                    vector.add(re.getString(2));
                    vector.add(re.getString(3));                
                    vector.add(re.getString(4));                    
                }
                defaultTableModel.addRow(vector);
            }
        } catch(SQLException e){
            System.out.println(e);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddBtn;
    private javax.swing.JButton Back;
    private javax.swing.JTextField CategoryNameTextField;
    private javax.swing.JLabel MainTitle;
    private javax.swing.JScrollPane ScrollPane;
    private javax.swing.JLabel categoryNameLabel;
    private javax.swing.JTable categoryTable;
    private javax.swing.JComboBox<String> collectionDropdown;
    private javax.swing.JLabel collectionNameLabel;
    private javax.swing.JPanel header;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JButton removeBtn;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}
